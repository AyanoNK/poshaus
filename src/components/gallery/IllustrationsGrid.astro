---
interface Props {
  columns: string[][];
}
const { columns } = Astro.props;
// backdrop-blur-lg
---

<div
  id="illustrations"
  class="relative flex flex-col items-center p-4 bg-[#63e1da] bg-opacity-50 scroll-smooth"
>
  <div
    class="grid grid-cols-3 justify-center justify-items-center gap-4 w-full m-0"
  >
    {
      columns.map((column) => (
        <div class="flex flex-col w-full gap-4">
          {column.map((image) => (
            <div class="image-container">
              <img
                src={image}
                srcset={`${image} 120w,
                  ${image} 200w,
                  ${image} 300w`}
                class="image"
                alt={image}
                width={100}
              />
            </div>
          ))}
        </div>
      ))
    }
  </div>
</div>

<style>
  @media (min-width: 0px) {
    .grid {
      grid-template-columns: 1fr;
    }
    .title {
      font-size: var(--font-size-lg);
    }
  }
  @media (min-width: 576px) {
    .grid {
      grid-template-columns: 1fr 1fr;
    }
    .title {
      font-size: var(--font-size-xl);
    }
  }
  @media (min-width: 768px) {
    .grid {
      max-width: 100%;
      box-sizing: border-box;
      grid-template-columns: 1fr 1fr 1fr;
    }
  }

  @media (min-width: 992px) {
    .grid {
    }
  }

  .image-container {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .image {
    width: 100%;
    height: auto;
    transition: all 0.25s cubic-bezier(0.08, 0.59, 0.29, 0.99);
    border-radius: 0.15rem;
  }
  .image:is(:hover) {
    will-change: transform;
    transform: scale(1.05);
  }
</style>
